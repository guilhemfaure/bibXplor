{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/minimongo/diff.js","filenameRelative":"/packages/minimongo/diff.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/minimongo/diff.js.map","sourceFileName":"/packages/minimongo/diff.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"diff"},"ignored":false,"code":"// ordered: bool.\n// old_results and new_results: collections of documents.\n//    if ordered, they are arrays.\n//    if unordered, they are IdMaps\nLocalCollection._diffQueryChanges = function (ordered, oldResults, newResults, observer, options) {\n  return DiffSequence.diffQueryChanges(ordered, oldResults, newResults, observer, options);\n};\n\nLocalCollection._diffQueryUnorderedChanges = function (oldResults, newResults, observer, options) {\n  return DiffSequence.diffQueryUnorderedChanges(oldResults, newResults, observer, options);\n};\n\nLocalCollection._diffQueryOrderedChanges = function (oldResults, newResults, observer, options) {\n  return DiffSequence.diffQueryOrderedChanges(oldResults, newResults, observer, options);\n};\n\nLocalCollection._diffObjects = function (left, right, callbacks) {\n  return DiffSequence.diffObjects(left, right, callbacks);\n};","map":{"version":3,"sources":["/packages/minimongo/diff.js"],"names":["LocalCollection","_diffQueryChanges","ordered","oldResults","newResults","observer","options","DiffSequence","diffQueryChanges","_diffQueryUnorderedChanges","diffQueryUnorderedChanges","_diffQueryOrderedChanges","diffQueryOrderedChanges","_diffObjects","left","right","callbacks","diffObjects"],"mappings":"AAAA;AACA;AACA;AACA;AACAA,gBAAgBC,iBAAhB,GAAoC,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,OAArD,EAA8D;AAChG,SAAOC,aAAaC,gBAAb,CAA8BN,OAA9B,EAAuCC,UAAvC,EAAmDC,UAAnD,EAA+DC,QAA/D,EAAyEC,OAAzE,CAAP;AACD,CAFD;;AAIAN,gBAAgBS,0BAAhB,GAA6C,UAAUN,UAAV,EAAsBC,UAAtB,EAAkCC,QAAlC,EAA4CC,OAA5C,EAAqD;AAChG,SAAOC,aAAaG,yBAAb,CAAuCP,UAAvC,EAAmDC,UAAnD,EAA+DC,QAA/D,EAAyEC,OAAzE,CAAP;AACD,CAFD;;AAKAN,gBAAgBW,wBAAhB,GACE,UAAUR,UAAV,EAAsBC,UAAtB,EAAkCC,QAAlC,EAA4CC,OAA5C,EAAqD;AACrD,SAAOC,aAAaK,uBAAb,CAAqCT,UAArC,EAAiDC,UAAjD,EAA6DC,QAA7D,EAAuEC,OAAvE,CAAP;AACD,CAHD;;AAKAN,gBAAgBa,YAAhB,GAA+B,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkC;AAC/D,SAAOT,aAAaU,WAAb,CAAyBH,IAAzB,EAA+BC,KAA/B,EAAsCC,SAAtC,CAAP;AACD,CAFD","file":"/packages/minimongo/diff.js.map","sourcesContent":["// ordered: bool.\n// old_results and new_results: collections of documents.\n//    if ordered, they are arrays.\n//    if unordered, they are IdMaps\nLocalCollection._diffQueryChanges = function (ordered, oldResults, newResults, observer, options) {\n  return DiffSequence.diffQueryChanges(ordered, oldResults, newResults, observer, options);\n};\n\nLocalCollection._diffQueryUnorderedChanges = function (oldResults, newResults, observer, options) {\n  return DiffSequence.diffQueryUnorderedChanges(oldResults, newResults, observer, options);\n};\n\n\nLocalCollection._diffQueryOrderedChanges =\n  function (oldResults, newResults, observer, options) {\n  return DiffSequence.diffQueryOrderedChanges(oldResults, newResults, observer, options);\n};\n\nLocalCollection._diffObjects = function (left, right, callbacks) {\n  return DiffSequence.diffObjects(left, right, callbacks);\n};\n"]},"hash":"89a5050bc6aa6b04d2e853dc2ff2aa8f530e28ae"}
